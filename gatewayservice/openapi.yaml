openapi: 3.0.0
info:
  title: Gatewayservice API
  description: Gateway OpenAPI specification.
  version: 0.2.0
servers:
  - url: http://localhost:8000
    description: Gateway service
tags:
  - name: Health
    description: Health check operations
  - name: Authentication
    description: Authentication operations
  - name: User
    description: User operations
  - name: Game
    description: Game operations
  - name: LLM
    description: Interactions with the LLM service
  - name: Questions
    description: Questions operations
paths:
  /health:
    get:
      summary: Check the health status of the service.
      operationId: checkHealth
      tags:
        - Health
      responses:
        "200":
          description: Service is healthy.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Health status.
                    example: OK
  /adduser:
    post:
      summary: Add a new user to the database.
      operationId: addUser
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User ID.
                  example: student
                password:
                  type: string
                  description: User password.
                  example: pass
      responses:
        "200":
          description: User added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  username:
                    type: string
                    description: User ID
                  password:
                    type: string
                    description: Hashed password
                    example: $2b$10$ZKdNYLWFQxzt5Rei/YTc/OsZNi12YiWz30JeUFHNdAt7MyfmkTuvC
                  _id:
                    type: string
                    description: Identification
                    example: 65f756db3fa22d227a4b7c7d
                  createdAt:
                    type: string
                    description: Creation date.
                    example: "2024-03-17T20:47:23.935Z"
                  ___v:
                    type: integer
                    example: "0"
        "400":
          description: Failed to add user.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: getaddrinfo EAI_AGAIN mongodb
  /login:
    post:
      summary: Log in to the system.
      operationId: loginUser
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User ID.
                  example: student
                password:
                  type: string
                  description: User password.
                  example: pass
      responses:
        "200":
          description: Login successful. Returns user token, username, and creation date.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: User token.
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NWY3NTZkYjNmYTIyZDIyN2E0YjdjN2QiLCJpYXQiOjE3MTA3MDg3NDUsImV4cCI6MTcxMDcxMjM0NX0.VMG_5DOyQ4GYlJQRcu1I6ICG1IGzuo2Xuei093ONHxw
                  username:
                    type: string
                    description: Username.
                    example: student
                  createdAt:
                    type: string
                    description: Creation date.
                    example: "2024-03-17T20:47:23.935Z"
        "401":
          description: Invalid credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Shows the error info..
                    example: Invalid credentials
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /askllm:
    post:
      summary: Ask a question to the LLM service.
      operationId: askLLM
      tags:
        - LLM
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                  description: The question to ask the LLM.
                  example: What do I need to do to pass the Software Architecture course?
                model:
                  oneOf:
                    - type: string
                      enum:
                        - empathy
                        - gemini
                  description: The model to use for the LLM.
      responses:
        "200":
          description: LLM response.
          content:
            application/json:
              schema:
                type: object
                properties:
                  answer:
                    type: string
                    description: The answer from the LLM.
                    example: To pass the Software Architecture course, you need to complete all assignments and pass the final exam.
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Invalid model specified.
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /question:
    get:
      summary: Fetch a question from the database.
      operationId: fetchQuestion
      tags:
        - Questions
      responses:
        "200":
          description: The system returns a question.
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    description: Unique identifier for the question.
                  type:
                    type: string
                    description: Type of question.
                    example: "flag"
                  imageUrl:
                    type: string
                    format: uri
                    description: URL of an image related to the question.
                    example: "http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20Spain.svg"
                  options:
                    type: array
                    description: List of possible answers.
                    items:
                      type: string
                    example:
                      - "Netherlands"
                      - "France"
                      - "Syria"
                      - "Egypt"
                  correctAnswer:
                    type: string
                    description: The correct answer.
                    example: "Spain"
                  alreadyShown:
                    type: boolean
                    description: Indicates if the question has been shown before.
                    example: true
                  createdAt:
                    type: string
                    format: date-time
                    description: Timestamp when the question was created.
                    example: "2025-03-18T18:37:03.978Z"
        "404":
          description: No questions available.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: No questions available.
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /fetch-flag-data:
    post:
      summary: Fetches questions from Wikidata and stores them in the database.
      operationId: fetchFlagData
      tags:
        - Questions
      responses:
        "200":
          description: Questions fetched and stored successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      description: The type of quiz question.
                      example: "flag"
                    imageUrl:
                      type: string
                      format: uri
                      description: URL of an image related to the question.
                      example: "http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20Japan.svg"
                    options:
                      type: array
                      description: List of possible answers.
                      items:
                        type: string
                      example:
                        - "Japan"
                        - "India"
                        - "Korea"
                        - "China"
                    correctAnswer:
                      type: string
                      description: The correct answer to the question.
                      example: "Japan"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /getAllUsernamesWithIds:
    post:
      summary: Get all usernames with their IDs.
      tags:
        - User
      operationId: getAllUsernamesWithIds
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              description: List of user IDs.
              items:
                type: string
              example:
                - "userId1"
                - "userId2"
                - "userId3"
      responses:
        "200":
          description: Succesfully retrieved the list of usernames with IDs.
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: User ID.
                          example: "userId1"
                        username:
                          type: string
                          description: Username.
                          example: "username"
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Bad request.
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Something went wrong on the server-side.
                    example: Internal Server Error
  /users:
    get:
      summary: Get all users from the database.
      operationId: getAllUsers
      tags:
        - User
      responses:
        "200":
          description: Successfully retrieved the list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      description: User ID.
                      example: "userId1"
                    username:
                      type: string
                      description: Username.
                      example: "username"
                    profilePicture:
                      type: string
                      description: URL of the user's profile picture.
                      example: "http://example.com/profile.jpg"
                    createdAt:
                      type: string
                      format: date-time
                      description: Creation date.
                      example: "2024-03-17T20:47:23.935Z"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /check-answer:
    post:
      summary: Check the answer to a question.
      operationId: checkAnswer
      tags:
        - Questions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                questionId:
                  type: string
                  description: The ID of the question.
                  example: "questionId1"
                userAnswer:
                  type: string
                  description: The user's answer.
                  example: "Spain"
      responses:
        "200":
          description: Answer checked successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  isCorrect:
                    type: boolean
                    description: Indicates if the answer is correct.
                    example: true
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Invalid question ID or answer.
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Internal Server Error
  /saveScore:
    post:
      summary: Save the user's score.
      operationId: saveScore
      tags:
        - Game
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: The ID of the user.
                  example: "userId1"
                score:
                  type: integer
                  description: The user's score.
                  example: 10
                isVictory:
                  type: boolean
                  description: Indicates if the user won.
                  example: true
      responses:
        "200":
          description: Score saved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    description: The ID of the user.
                    example: "userId1"
                  score:
                    type: integer
                    description: The user's score.
                    example: 10
                  isVictory:
                    type: boolean
                    description: Indicates if the user won.
                    example: true
                  createdAt:
                    type: string
                    format: date-time
                    description: Creation date.
                    example: "2024-03-17T20:47:23.935Z"
        "400":
          description: Error saving the score.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error information.
                    example: Invalid user ID or score.
  /leaderboard:
    get:
      summary: Get the leaderboard data.
      operationId: getLeaderboard
      tags:
        - Game
      parameters:
        - name: sortBy
          in: query
          description: Sort the leaderboard by score or date.
          required: false
          schema:
            type: string
            enum:
              - totalScore
              - winRate
              - gamesPlayed
            default: totalScore
        - name: sortOrder
          description: Sort order for the leaderboard.
          in: query
          required: false
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
      responses:
        "200":
          description: Successfully retrieved the leaderboard data.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: string
                      description: The unique user ID.
                      example: "userId1"
                    totalScore:
                      type: integer
                      description: The total score of the user.
                      example: 100
                    winRate:
                      type: number
                      format: float
                      description: The win rate of the user (0 to 1).
                      example: 0.75
                    gamesPlayed:
                      type: integer
                      description: The number of games played by the user.
                      example: 20
                    username:
                      type: string
                      description: The username of the user, enriched from the user service.
                      example: "player123"
        "400":
          description: Bad Request - Invalid query parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message indicating the invalid parameters.
                  validFields:
                    type: array
                    items:
                      type: string
                    description: List of valid sorting fields for the leaderboard.
        "500":
          description: Internal Server Error - An error occurred while fetching data from the game or user service.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing the issue.
                  details:
                    type: string
                    description: Additional details.
